module Haskell-Strings
exports
  syntax
    "'" CharChar "'" 	   -> <Char-CF> {cons("Char")}
    "\"" StringChar* "\""  -> <String-CF> {cons("String")}

    <CharChar-LEX> -> CharChar
    "\\" Escape 		   -> CharChar {cons("Escape")}
    "\\" [\&]              -> CharChar {reject}

    <StringChar-LEX> -> StringChar
    "\\" Escape 		   -> StringChar {cons("Escape")}
    "\\" [\ \t\n\r]+ "\\"  -> StringChar {cons("Gap")}

    <CharEsc-LEX> -> Escape {cons("CharEsc")}
    <ASCII-LEX> -> Escape  {cons("ASCIIEsc")}
    <Decimal-LEX> -> Escape {cons("DecimalEsc")}
    "o" <Octal-LEX> -> Escape {cons("OctalEsc")}
    "x" <Hexadecimal-LEX> -> Escape {cons("HexadecimalEsc")}


  lexical syntax
    ~[\0-\31\'\\] 	       -> CharChar
    ~[\0-\31\"\\] 	       -> StringChar
    [abfnrtv\\\"\'\&]       -> CharEsc

    "^" [A-Z\@\[\]\\\^\_]                   -> ASCII

    "NUL" | "SOH" | "STX" | "ETX" | "EOT" |
    "ENQ" | "ACK" | "BEL" | "BS"  | "HT"  |
    "LF"  | "VT"  | "FF"  | "CR"  | ASCII-SO  |
    "SI"  | "DLE" | "DC1" | "DC2" | "DC3" |
    "DC4" | "NAK" | "SYN" | "ETB" | "CAN" |
    "EM"  | "SUB" | "ESC" | "FS"  | "GS"  |
    "RS"  | "US"  | "SP"  | "DEL"           -> ASCII

    "SO" -> ASCII-SO
  
  lexical restrictions
    ASCII-SO -/- [H]