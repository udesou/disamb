module Haskell-Literals
exports
  context-free syntax
    INTEGER 		-> Literal {cons("Int")}
    Char 		-> Literal
    FLOAT 		-> Literal {cons("Float")}
    RATIONAL 		-> Literal {cons("Float")}
    String 		-> Literal
    PRIMINTEGER 	-> Literal {cons("PrimInt")}
    PRIMCHAR 		-> Literal {cons("PrimChar")}
    PRIMSTRING 		-> Literal {cons("PrimString")}
    PRIMFLOAT 		-> Literal {cons("PrimFloat")}
    PRIMDOUBLE 		-> Literal {cons("PrimDouble")}
    CLITLIT 		-> Literal {cons("CLitLit")}

